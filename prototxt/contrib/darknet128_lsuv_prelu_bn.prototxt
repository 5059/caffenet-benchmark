name: "CaffeNet"
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 128
    mean_value: 104
    mean_value: 117
    mean_value: 124
  }

  data_param {
    source: "/media/dereyly/2E4057004056CDE9/data/CAFFE_DATA/ilsvrc12_train_lmdb_144" 
    batch_size: 256
    backend: LMDB
    #shuffle: true
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 128
    mean_value: 104
    mean_value: 117
    mean_value: 124
  }

  data_param {
    source: "/media/dereyly/2E4057004056CDE9/data/CAFFE_DATA/ilsvrc12_val_lmdb_144" 
    batch_size: 100
    backend: LMDB
  }
}


layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    stride: 1
    #pad: 1
    weight_filler {
      type: "msra"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      
    }
  }
}
layer {
  name: "relu1"
  type: "PReLU"
  prelu_param { filler {type: "constant" value: 0.3 } channel_shared: false }
  bottom: "conv1"
  top: "conv1"
}



layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv2_BN"
  type: "BatchNorm" 
  bottom: "pool1"
  top: "conv2_BN"
  
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv2_BN"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      
    }
  }
}
layer {
  name: "relu2"
  type: "PReLU"
  prelu_param { filler {type: "constant" value: 0.3 } channel_shared: false }
  bottom: "conv2"
  top: "conv2"
}

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv3_BN"
  type: "BatchNorm" 
  bottom: "pool2"
  top: "conv3_BN"
  
}

layer {
  name: "conv3"
  type: "Convolution"
  bottom: "conv3_BN"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      
    }
  }
}
layer {
  name: "relu3"
  type: "PReLU"
  prelu_param { filler {type: "constant" value: 0.3 } channel_shared: false }
  bottom: "conv3"
  top: "conv3"
}

layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv4_BN"
  type: "BatchNorm" 
  bottom: "pool3"
  top: "conv4_BN"
  
}

layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv4_BN"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      
    }
  }
}
layer {
  name: "relu4"
  type: "PReLU"
  prelu_param { filler {type: "constant" value: 0.3 } channel_shared: false }
  bottom: "conv4"
  top: "conv4"
}

layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv5_BN"
  type: "BatchNorm" 
  bottom: "pool4"
  top: "conv5_BN"
  
}

layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv5_BN"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      
    }
  }
}
layer {
  name: "relu5"
  type: "PReLU"
  prelu_param { filler {type: "constant" value: 0.3 } channel_shared: false }
  bottom: "conv5"
  top: "conv5"
}

layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}


layer {
  name: "conv6_BN"
  type: "BatchNorm" 
  bottom: "pool5"
  top: "conv6_BN"
  
}

layer {
  name: "conv6"
  type: "Convolution"
  bottom: "conv6_BN"
  top: "conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      
    }
  }
}

layer {
  name: "relu6"
  type: "PReLU"
  prelu_param { filler {type: "constant" value: 0.3 } channel_shared: false }
  bottom: "conv6"
  top: "conv6"
}

layer {
  name: "pool6"
  type: "Pooling"
  bottom: "conv6"
  top: "pool6"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}


layer {
  name: "conv7_BN"
  type: "BatchNorm" 
  bottom: "pool6"
  top: "conv7_BN"
  
}

layer {
  name: "conv7"
  type: "Convolution"
  bottom: "conv7_BN"
  top: "conv7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1024
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      
    }
  }
}

layer {
  name: "relu7"
  type: "PReLU"
  prelu_param { filler {type: "constant" value: 0.3 } channel_shared: false }
  bottom: "conv7"
  top: "conv7"
}


#########################################

## add avgpool????????????????

layer {
  name: "fc8_BN"
  type: "BatchNorm" 
  bottom: "conv7"
  top: "fc8_BN"
}


layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc8_BN"
  top: "drop7"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "drop7"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "label"
  top: "loss"
}

